// Copyright 2021-2022 Zenauth Ltd.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: cerbos/cloud/bundle/v1/bundle.proto

package bundlev1

import (
	v1 "github.com/cerbos/cloud-api/genpb/cerbos/cloud/pdp/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BundleInfo holds information about a bundle and its download URLs.
type BundleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label      string                `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	BundleHash []byte                `protobuf:"bytes,2,opt,name=bundle_hash,json=bundleHash,proto3" json:"bundle_hash,omitempty"`
	Segments   []*BundleInfo_Segment `protobuf:"bytes,3,rep,name=segments,proto3" json:"segments,omitempty"`
}

func (x *BundleInfo) Reset() {
	*x = BundleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleInfo) ProtoMessage() {}

func (x *BundleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleInfo.ProtoReflect.Descriptor instead.
func (*BundleInfo) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_bundle_v1_bundle_proto_rawDescGZIP(), []int{0}
}

func (x *BundleInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *BundleInfo) GetBundleHash() []byte {
	if x != nil {
		return x.BundleHash
	}
	return nil
}

func (x *BundleInfo) GetSegments() []*BundleInfo_Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type GetBundleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PdpId       *v1.Identifier `protobuf:"bytes,1,opt,name=pdp_id,json=pdpId,proto3" json:"pdp_id,omitempty"`
	BundleLabel string         `protobuf:"bytes,2,opt,name=bundle_label,json=bundleLabel,proto3" json:"bundle_label,omitempty"`
}

func (x *GetBundleRequest) Reset() {
	*x = GetBundleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBundleRequest) ProtoMessage() {}

func (x *GetBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBundleRequest.ProtoReflect.Descriptor instead.
func (*GetBundleRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_bundle_v1_bundle_proto_rawDescGZIP(), []int{1}
}

func (x *GetBundleRequest) GetPdpId() *v1.Identifier {
	if x != nil {
		return x.PdpId
	}
	return nil
}

func (x *GetBundleRequest) GetBundleLabel() string {
	if x != nil {
		return x.BundleLabel
	}
	return ""
}

type GetBundleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleInfo *BundleInfo `protobuf:"bytes,1,opt,name=bundle_info,json=bundleInfo,proto3" json:"bundle_info,omitempty"`
}

func (x *GetBundleResponse) Reset() {
	*x = GetBundleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBundleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBundleResponse) ProtoMessage() {}

func (x *GetBundleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBundleResponse.ProtoReflect.Descriptor instead.
func (*GetBundleResponse) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_bundle_v1_bundle_proto_rawDescGZIP(), []int{2}
}

func (x *GetBundleResponse) GetBundleInfo() *BundleInfo {
	if x != nil {
		return x.BundleInfo
	}
	return nil
}

type WatchBundleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PdpId       *v1.Identifier `protobuf:"bytes,1,opt,name=pdp_id,json=pdpId,proto3" json:"pdp_id,omitempty"`
	BundleLabel string         `protobuf:"bytes,2,opt,name=bundle_label,json=bundleLabel,proto3" json:"bundle_label,omitempty"`
}

func (x *WatchBundleRequest) Reset() {
	*x = WatchBundleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBundleRequest) ProtoMessage() {}

func (x *WatchBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBundleRequest.ProtoReflect.Descriptor instead.
func (*WatchBundleRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_bundle_v1_bundle_proto_rawDescGZIP(), []int{3}
}

func (x *WatchBundleRequest) GetPdpId() *v1.Identifier {
	if x != nil {
		return x.PdpId
	}
	return nil
}

func (x *WatchBundleRequest) GetBundleLabel() string {
	if x != nil {
		return x.BundleLabel
	}
	return ""
}

type WatchBundleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//
	//	*WatchBundleResponse_BundleUpdate
	//	*WatchBundleResponse_Reconnect_
	Msg isWatchBundleResponse_Msg `protobuf_oneof:"msg"`
}

func (x *WatchBundleResponse) Reset() {
	*x = WatchBundleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBundleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBundleResponse) ProtoMessage() {}

func (x *WatchBundleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBundleResponse.ProtoReflect.Descriptor instead.
func (*WatchBundleResponse) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_bundle_v1_bundle_proto_rawDescGZIP(), []int{4}
}

func (m *WatchBundleResponse) GetMsg() isWatchBundleResponse_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *WatchBundleResponse) GetBundleUpdate() *BundleInfo {
	if x, ok := x.GetMsg().(*WatchBundleResponse_BundleUpdate); ok {
		return x.BundleUpdate
	}
	return nil
}

func (x *WatchBundleResponse) GetReconnect() *WatchBundleResponse_Reconnect {
	if x, ok := x.GetMsg().(*WatchBundleResponse_Reconnect_); ok {
		return x.Reconnect
	}
	return nil
}

type isWatchBundleResponse_Msg interface {
	isWatchBundleResponse_Msg()
}

type WatchBundleResponse_BundleUpdate struct {
	BundleUpdate *BundleInfo `protobuf:"bytes,1,opt,name=bundle_update,json=bundleUpdate,proto3,oneof"`
}

type WatchBundleResponse_Reconnect_ struct {
	Reconnect *WatchBundleResponse_Reconnect `protobuf:"bytes,2,opt,name=reconnect,proto3,oneof"`
}

func (*WatchBundleResponse_BundleUpdate) isWatchBundleResponse_Msg() {}

func (*WatchBundleResponse_Reconnect_) isWatchBundleResponse_Msg() {}

type BundleInfo_Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SegmentId    uint32   `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	Checksum     []byte   `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
	DownloadUrls []string `protobuf:"bytes,3,rep,name=download_urls,json=downloadUrls,proto3" json:"download_urls,omitempty"`
}

func (x *BundleInfo_Segment) Reset() {
	*x = BundleInfo_Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleInfo_Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleInfo_Segment) ProtoMessage() {}

func (x *BundleInfo_Segment) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleInfo_Segment.ProtoReflect.Descriptor instead.
func (*BundleInfo_Segment) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_bundle_v1_bundle_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BundleInfo_Segment) GetSegmentId() uint32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

func (x *BundleInfo_Segment) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

func (x *BundleInfo_Segment) GetDownloadUrls() []string {
	if x != nil {
		return x.DownloadUrls
	}
	return nil
}

type WatchBundleResponse_Reconnect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Backoff *durationpb.Duration `protobuf:"bytes,1,opt,name=backoff,proto3" json:"backoff,omitempty"`
	Reason  string               `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *WatchBundleResponse_Reconnect) Reset() {
	*x = WatchBundleResponse_Reconnect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBundleResponse_Reconnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBundleResponse_Reconnect) ProtoMessage() {}

func (x *WatchBundleResponse_Reconnect) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBundleResponse_Reconnect.ProtoReflect.Descriptor instead.
func (*WatchBundleResponse_Reconnect) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_bundle_v1_bundle_proto_rawDescGZIP(), []int{4, 0}
}

func (x *WatchBundleResponse_Reconnect) GetBackoff() *durationpb.Duration {
	if x != nil {
		return x.Backoff
	}
	return nil
}

func (x *WatchBundleResponse_Reconnect) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_cerbos_cloud_bundle_v1_bundle_proto protoreflect.FileDescriptor

var file_cerbos_cloud_bundle_v1_bundle_proto_rawDesc = []byte{
	0x0a, 0x23, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1d, 0x63,
	0x65, 0x72, 0x62, 0x6f, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x64, 0x70, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x64, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb7, 0x02, 0x0a, 0x0a, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x28, 0x0a, 0x0b, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x20, 0x52, 0x0a,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x50, 0x0a, 0x08, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63,
	0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02,
	0x08, 0x01, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x8d, 0x01, 0x0a,
	0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x09, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x20, 0x52, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x35, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x10, 0xfa, 0x42,
	0x0d, 0x92, 0x01, 0x0a, 0x08, 0x01, 0x18, 0x01, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x73, 0x22, 0x80, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x40, 0x0a, 0x06, 0x70, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x70, 0x64,
	0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0x62, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0b, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x65, 0x72, 0x62,
	0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x70, 0x64,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x65, 0x72,
	0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x64, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x70, 0x64, 0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0c,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x9d, 0x02, 0x0a, 0x13, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x0d, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0c, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x55, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x1a, 0x58, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12,
	0x33, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x62, 0x61, 0x63,
	0x6b, 0x6f, 0x66, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x32, 0xfb, 0x01, 0x0a, 0x13, 0x43, 0x65, 0x72,
	0x62, 0x6f, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x62, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x28, 0x2e,
	0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x1a, 0x14, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x45, 0x58, 0x50, 0x45, 0x52, 0x49,
	0x4d, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x62, 0x2f, 0x63, 0x65, 0x72, 0x62,
	0x6f, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2f,
	0x76, 0x31, 0x3b, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_cerbos_cloud_bundle_v1_bundle_proto_rawDescOnce sync.Once
	file_cerbos_cloud_bundle_v1_bundle_proto_rawDescData = file_cerbos_cloud_bundle_v1_bundle_proto_rawDesc
)

func file_cerbos_cloud_bundle_v1_bundle_proto_rawDescGZIP() []byte {
	file_cerbos_cloud_bundle_v1_bundle_proto_rawDescOnce.Do(func() {
		file_cerbos_cloud_bundle_v1_bundle_proto_rawDescData = protoimpl.X.CompressGZIP(file_cerbos_cloud_bundle_v1_bundle_proto_rawDescData)
	})
	return file_cerbos_cloud_bundle_v1_bundle_proto_rawDescData
}

var file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_cerbos_cloud_bundle_v1_bundle_proto_goTypes = []interface{}{
	(*BundleInfo)(nil),                    // 0: cerbos.cloud.bundle.v1.BundleInfo
	(*GetBundleRequest)(nil),              // 1: cerbos.cloud.bundle.v1.GetBundleRequest
	(*GetBundleResponse)(nil),             // 2: cerbos.cloud.bundle.v1.GetBundleResponse
	(*WatchBundleRequest)(nil),            // 3: cerbos.cloud.bundle.v1.WatchBundleRequest
	(*WatchBundleResponse)(nil),           // 4: cerbos.cloud.bundle.v1.WatchBundleResponse
	(*BundleInfo_Segment)(nil),            // 5: cerbos.cloud.bundle.v1.BundleInfo.Segment
	(*WatchBundleResponse_Reconnect)(nil), // 6: cerbos.cloud.bundle.v1.WatchBundleResponse.Reconnect
	(*v1.Identifier)(nil),                 // 7: cerbos.cloud.pdp.v1.Identifier
	(*durationpb.Duration)(nil),           // 8: google.protobuf.Duration
}
var file_cerbos_cloud_bundle_v1_bundle_proto_depIdxs = []int32{
	5, // 0: cerbos.cloud.bundle.v1.BundleInfo.segments:type_name -> cerbos.cloud.bundle.v1.BundleInfo.Segment
	7, // 1: cerbos.cloud.bundle.v1.GetBundleRequest.pdp_id:type_name -> cerbos.cloud.pdp.v1.Identifier
	0, // 2: cerbos.cloud.bundle.v1.GetBundleResponse.bundle_info:type_name -> cerbos.cloud.bundle.v1.BundleInfo
	7, // 3: cerbos.cloud.bundle.v1.WatchBundleRequest.pdp_id:type_name -> cerbos.cloud.pdp.v1.Identifier
	0, // 4: cerbos.cloud.bundle.v1.WatchBundleResponse.bundle_update:type_name -> cerbos.cloud.bundle.v1.BundleInfo
	6, // 5: cerbos.cloud.bundle.v1.WatchBundleResponse.reconnect:type_name -> cerbos.cloud.bundle.v1.WatchBundleResponse.Reconnect
	8, // 6: cerbos.cloud.bundle.v1.WatchBundleResponse.Reconnect.backoff:type_name -> google.protobuf.Duration
	1, // 7: cerbos.cloud.bundle.v1.CerbosBundleService.GetBundle:input_type -> cerbos.cloud.bundle.v1.GetBundleRequest
	3, // 8: cerbos.cloud.bundle.v1.CerbosBundleService.WatchBundle:input_type -> cerbos.cloud.bundle.v1.WatchBundleRequest
	2, // 9: cerbos.cloud.bundle.v1.CerbosBundleService.GetBundle:output_type -> cerbos.cloud.bundle.v1.GetBundleResponse
	4, // 10: cerbos.cloud.bundle.v1.CerbosBundleService.WatchBundle:output_type -> cerbos.cloud.bundle.v1.WatchBundleResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_cerbos_cloud_bundle_v1_bundle_proto_init() }
func file_cerbos_cloud_bundle_v1_bundle_proto_init() {
	if File_cerbos_cloud_bundle_v1_bundle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BundleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBundleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBundleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBundleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBundleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BundleInfo_Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBundleResponse_Reconnect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*WatchBundleResponse_BundleUpdate)(nil),
		(*WatchBundleResponse_Reconnect_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cerbos_cloud_bundle_v1_bundle_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cerbos_cloud_bundle_v1_bundle_proto_goTypes,
		DependencyIndexes: file_cerbos_cloud_bundle_v1_bundle_proto_depIdxs,
		MessageInfos:      file_cerbos_cloud_bundle_v1_bundle_proto_msgTypes,
	}.Build()
	File_cerbos_cloud_bundle_v1_bundle_proto = out.File
	file_cerbos_cloud_bundle_v1_bundle_proto_rawDesc = nil
	file_cerbos_cloud_bundle_v1_bundle_proto_goTypes = nil
	file_cerbos_cloud_bundle_v1_bundle_proto_depIdxs = nil
}
